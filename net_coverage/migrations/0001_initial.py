# Generated by Django 4.1 on 2023-07-10 18:59

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProvidersCoverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_mnc', models.IntegerField(choices=[('20801', 'Orange'), ('20802', 'Orange'), ('20803', 'MobiquiThings'), ('20804', 'Netcom Group'), ('20805', 'Globalstar'), ('20806', 'Globalstar'), ('20807', 'Globalstar'), ('20808', 'Globalstar'), ('20809', 'SFR'), ('20810', 'SFR'), ('20811', 'SFR'), ('20812', 'Hewlett-Packard France'), ('20813', 'SFR'), ('20814', 'RFF'), ('20815', 'Free mobile'), ('20816', 'Free mobile'), ('20817', 'Legos'), ('20818', 'Voxbone'), ('20819', 'Altitude'), ('20820', 'Bouygues Telecom'), ('20821', 'Bouygues Telecom'), ('20822', 'Transatel Mobile'), ('20823', 'Syndicat mixte ouvert'), ('20824', 'MobiquiThings'), ('20825', 'Lycamobile'), ('20826', 'NRJ Mobile / Auchan Télécom / Crédit Mutuel Mobile / CIC Mobile / CDiscount Mobile / SIM+'), ('20827', 'Coriolis'), ('20828', 'AIF'), ('20829', 'Cubic telecom France'), ('20830', 'Syma Mobile'), ('20831', 'Vectone / Delight Mobile (MVNO)'), ('20832', 'Orange'), ('20834', 'Cellhire'), ('20835', 'Free mobile'), ('20886', 'SEM@FOR77'), ('20888', 'Bouygues'), ('20889', 'Fondation b-com'), ('20890', 'Association Images & Réseaux'), ('20891', 'Orange'), ('20892', 'Association Plate-forme Telecom'), ('20893', 'Thales communications & Security SAS'), ('20894', 'Halys'), ('20895', 'Orange'), ('20896', 'Axione'), ('20897', 'Thales communications'), ('20898', 'Air France')], help_text='Mobile Network Code of a given network provider')),
                ('x', models.IntegerField(help_text='lambert93 x coordinate')),
                ('y', models.IntegerField(help_text='lambert93 y coordinate')),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)])),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)])),
                ('post_code', models.IntegerField(blank=True, help_text='postcode (it includes the citycode) of the given latitude and longitude point', null=True)),
                ('city_code', models.IntegerField(blank=True, help_text='citycode of the given latitude and longitude point', null=True)),
                ('two_g', models.BooleanField(default=False)),
                ('three_g', models.BooleanField(default=False)),
                ('four_g', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
    ]
